# -*- coding: utf-8 -*-
"""Untitled108.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BWvPLs9O5-RKRQE00R9Ds9-4-8voAkux
"""

import streamlit as st
import pandas as pd
import numpy as np
import statsmodels.api as sm
import plotly.express as px
import requests
import io
import joblib
import os
from fpdf import FPDF
from sklearn.linear_model import LinearRegression

# ==================== 🇨🇦 Styling for Visibility 🇨🇦 ====================
st.markdown(
    """
    <style>
        .stApp {
            background-color: #ffffff;
        }
        .title-text {
            font-size: 36px;
            font-weight: bold;
            color: #4a4a4a;
            text-align: center;
        }
        .sub-header {
            font-size: 24px;
            font-weight: bold;
            color: #333333;
            text-align: center;
        }
        .info-text {
            font-size: 18px;
            color: #4a4a4a;
            text-align: center;
        }
    </style>
    """,
    unsafe_allow_html=True,
)

# ==================== 🇨🇦 Title & Header 🇨🇦 ====================
st.markdown('<p class="title-text">🇨🇦 U.S. Tariff Impact Analysis on Canada 🇨🇦</p>', unsafe_allow_html=True)
st.image("https://upload.wikimedia.org/wikipedia/commons/c/cf/Flag_of_Canada.svg", width=200)

# ==================== 🌍 Fetch Real-Time Economic Indicators 🌍 ====================
st.markdown('<p class="sub-header">📊 Real-Time Economic Indicators</p>', unsafe_allow_html=True)
world_bank_url = "https://api.worldbank.org/v2/country/CA/indicator/NY.GDP.MKTP.CD?format=json"
response = requests.get(world_bank_url)

if response.status_code == 200:
    data = response.json()
    latest_gdp = data[1][0]["value"]
    st.markdown(f'<p class="info-text">🇨🇦 **Canada GDP (Latest):** CAD {latest_gdp:,.2f}</p>', unsafe_allow_html=True)
else:
    st.markdown('<p class="info-text">⚠️ Unable to fetch real-time GDP data.</p>', unsafe_allow_html=True)

# ==================== 🇺🇸 U.S. Tariff Impact Inputs 🇺🇸 ====================
st.sidebar.header("🇺🇸 U.S. Tariff Impact Simulation 🇺🇸")

tariff_rate = st.sidebar.slider("U.S. Tariff Rate Increase (%)", 0, 50, 10, 5)
canadian_export_value = st.sidebar.number_input("Total Canadian Exports to U.S. (Billion CAD)", 50, 500, 200)
subsidy_amount = st.sidebar.slider("Government Subsidy Support (Billion CAD)", 0, 50, 10, 1)

# ==================== 📉 Economic Impact Analysis 📉 ====================
st.markdown('<p class="sub-header">📉 Economic Impact Analysis</p>', unsafe_allow_html=True)
predicted_trade_volume = round(canadian_export_value - (tariff_rate * 3), 2)
gdp_loss = round(0.04 * tariff_rate, 2)
job_loss = round(2000 * tariff_rate, 0)

economic_table = pd.DataFrame({
    "Indicator": ["Predicted Trade Volume (Billion CAD)", "GDP Loss Estimate (Billion CAD)", "Job Loss Estimate"],
    "Estimated Value": [predicted_trade_volume, gdp_loss, job_loss]
})

st.table(economic_table)

# ==================== 🔍 Predictive Economic Simulation 🔍 ====================
st.markdown('<p class="sub-header">📊 Predictive Economic Simulation</p>', unsafe_allow_html=True)

# Load or train AI model
model_file = "us_tariff_model.pkl"
if not os.path.exists(model_file):
    # Generate synthetic training data
    X_train = np.array([[x, y] for x in range(0, 51, 5) for y in range(0, 51, 5)])
    y_train = np.array([200 - (x * 3) + (y * 0.5) for x, y in X_train])

    model = LinearRegression()
    model.fit(X_train, y_train)
    joblib.dump(model, model_file)
else:
    model = joblib.load(model_file)

future_trade_volume = model.predict([[tariff_rate, subsidy_amount]])[0]
st.markdown(f'<p class="info-text">📈 **Predicted Trade Volume in 5 Years:** {future_trade_volume:,.2f} Billion CAD</p>', unsafe_allow_html=True)

# ==================== 📄 Export Reports to PDF & Excel 📄 ====================
st.markdown('<p class="sub-header">📑 Export Report</p>', unsafe_allow_html=True)

# 📥 Export to Excel
excel_buffer = io.BytesIO()
economic_table.to_excel(excel_buffer, index=False, engine='openpyxl')
st.download_button(
    label="📥 Download Excel Report",
    data=excel_buffer.getvalue(),
    file_name="us_tariff_impact_analysis.xlsx",
    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
)

# 📥 Export to PDF
pdf = FPDF()
pdf.add_page()
pdf.set_font("Arial", size=12)
pdf.cell(200, 10, "U.S. Tariff Impact Analysis Report", ln=True, align='C')
pdf.ln(10)

pdf.cell(200, 10, f"Predicted Trade Volume: {predicted_trade_volume} Billion CAD", ln=True)
pdf.cell(200, 10, f"GDP Loss Estimate: {gdp_loss} Billion CAD", ln=True)
pdf.cell(200, 10, f"Job Loss Estimate: {job_loss}", ln=True)
pdf.ln(10)

pdf.cell(200, 10, f"Government Subsidy Support: {subsidy_amount} Billion CAD", ln=True)
pdf.ln(10)

pdf_buffer = io.BytesIO()
pdf.output(pdf_buffer, 'S')

st.download_button(
    label="📥 Download PDF Report",
    data=pdf_buffer.getvalue(),
    file_name="us_tariff_impact_analysis.pdf",
    mime="application/pdf"
)

# ==================== ✅ Final Message ✅ ====================
st.markdown('<p class="info-text">🍁 <strong>Developed by VisiVault Analytics Ltd.</strong> 🍁</p>', unsafe_allow_html=True)